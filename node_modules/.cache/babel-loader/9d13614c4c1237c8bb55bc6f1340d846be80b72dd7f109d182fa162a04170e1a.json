{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\Coding\\\\Projects\\\\React Router\\\\Appointment Planner\\\\appointment-planner-starting-v18\\\\src\\\\components\\\\appointmentForm\\\\AppointmentForm.js\";\nimport React from \"react\";\nimport { ContactPicker } from \"../ContactPicker/ContactPicker.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nexport const AppointmentForm = _ref => {\n  let {\n    contacts,\n    title,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setDate,\n    time,\n    setTime,\n    handleSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        value: date,\n        onChange: e => setPhone(e.target.value),\n        minLength: 9,\n        maxLength: 13,\n        pattern: \"[0-9+]*\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: time,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","ContactPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","AppointmentForm","_ref","contacts","title","setTitle","contact","setContact","date","setDate","time","setTime","handleSubmit","children","onSubmit","type","value","name","onChange","e","setName","target","required","fileName","_jsxFileName","lineNumber","columnNumber","setPhone","minLength","maxLength","pattern","setEmail","_c","$RefreshReg$"],"sources":["C:/Documents/Coding/Projects/React Router/Appointment Planner/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { ContactPicker } from \"../ContactPicker/ContactPicker.js\";\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        required\r\n        />\r\n      <input \r\n        type='tel'\r\n        value={date}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n        minLength={9}\r\n        maxLength={13}\r\n        pattern=\"[0-9+]*\"\r\n        required\r\n      />\r\n      <input \r\n        type=\"email\"\r\n        value={time}\r\n        onChange={ (e) =>setEmail(e.target.value)}\r\n        required\r\n        />\r\n      <input  \r\n        type='submit'\r\n        value='Submit' />\r\n    </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAM,CAACC,KAAK,EAAEC,GAAG,EAAEC,IAAI,CAAC,GAAG,IAAIC,IAAI,EAAE,CAClCC,kBAAkB,CAAC,OAAO,CAAC,CAC3BC,KAAK,CAAC,GAAG,CAAC;EACb,OAAQ,GAAEH,IAAK,IAAGF,KAAK,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGL,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;AACpE,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAWzB;EAAA,IAX0B;IAC9BC,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC,UAAU;IACVC,IAAI;IACJC,OAAO;IACPC,IAAI;IACJC,OAAO;IACPC;EACF,CAAC,GAAAV,IAAA;EAEC,oBACEZ,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACAvB,OAAA;MAAMwB,QAAQ,EAAEF,YAAa;MAAAC,QAAA,gBAC3BvB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEC,IAAK;QACZC,QAAQ,EAAGC,CAAC,IAAKC,OAAO,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;QACzCM,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACN,eACJpC,OAAA;QACEyB,IAAI,EAAC,KAAK;QACVC,KAAK,EAAER,IAAK;QACZU,QAAQ,EAAGC,CAAC,IAAKQ,QAAQ,CAACR,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;QAC1CY,SAAS,EAAE,CAAE;QACbC,SAAS,EAAE,EAAG;QACdC,OAAO,EAAC,SAAS;QACjBR,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,eACFpC,OAAA;QACEyB,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEN,IAAK;QACZQ,QAAQ,EAAIC,CAAC,IAAIY,QAAQ,CAACZ,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;QAC1CM,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACN,eACJpC,OAAA;QACEyB,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACd,iBACJ;AAEP,CAAC;AAACM,EAAA,GA3CW/B,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}