{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\Coding\\\\Projects\\\\React Router\\\\Appointment Planner\\\\appointment-planner-starting-v18\\\\src\\\\components\\\\contactPicker\\\\ContactPicker.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactPicker = _ref => {\n  let {\n    contacts,\n    onChange,\n    value,\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChange,\n      value: value,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"No Contact Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), contacts.map((contact, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: contact.name,\n      children: contact.name\n    }, i + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true);\n};\n_c = ContactPicker;\nvar _c;\n$RefreshReg$(_c, \"ContactPicker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactPicker","_ref","contacts","onChange","value","name","children","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","i","_c","$RefreshReg$"],"sources":["C:/Documents/Coding/Projects/React Router/Appointment Planner/appointment-planner-starting-v18/src/components/contactPicker/ContactPicker.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({contacts, onChange, value, name}) => {\r\n  return (\r\n    <>\r\n    <select \r\n      onChange={handleChange}\r\n      value={value}\r\n      name={name}\r\n      />\r\n      <option value=\"\">\r\n        No Contact Selected\r\n      </option>\r\n      {contacts.map((contact, i) =>\r\n      <option key={i+1} value={contact.name}>\r\n        {contact.name}\r\n      </option>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAAuC;EAAA,IAAtC;IAACC,QAAQ;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAAJ,IAAA;EAC7D,oBACEJ,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACAT,OAAA;MACEM,QAAQ,EAAEI,YAAa;MACvBH,KAAK,EAAEA,KAAM;MACbC,IAAI,EAAEA;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT,eACFd,OAAA;MAAQO,KAAK,EAAC,EAAE;MAAAE,QAAA,EAAC;IAEjB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACRT,QAAQ,CAACU,GAAG,CAAC,CAACC,OAAO,EAAEC,CAAC,kBACzBjB,OAAA;MAAkBO,KAAK,EAAES,OAAO,CAACR,IAAK;MAAAC,QAAA,EACnCO,OAAO,CAACR;IAAI,GADFS,CAAC,GAAC,CAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEP,CACR;EAAA,gBACA;AAEP,CAAC;AAACI,EAAA,GAlBWf,aAAa;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}