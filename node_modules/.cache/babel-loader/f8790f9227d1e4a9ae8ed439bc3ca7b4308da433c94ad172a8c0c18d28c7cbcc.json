{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents\\\\Coding\\\\Projects\\\\React Router\\\\Appointment Planner\\\\appointment-planner-starting-v18\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const addContact = (name, phone, email) => {\n    setContacts(contacts => {\n      const newContact = {\n        name,\n        phone,\n        email\n      };\n      return [...contacts, newContact];\n    });\n  };\n  const addAppointment = (name, contact, date, time) => {\n    setAppointments(prevAppointment => {\n      const newAppointment = {\n        name,\n        contact,\n        date,\n        time\n      };\n      return [...prevAppointment, newAppointment];\n    });\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        onAddContact: addContact,\n        onContacts: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        onContacts: contacts,\n        onAddAppointment: addAppointment,\n        onAppointment: appointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ilNV2NNtl3t/F9tV3D6w+C6XRbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","appointments","setAppointments","addContact","name","phone","email","newContact","addAppointment","contact","date","time","prevAppointment","newAppointment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","onAddContact","onContacts","APPOINTMENTS","onAddAppointment","onAppointment","_c","$RefreshReg$"],"sources":["C:/Documents/Coding/Projects/React Router/Appointment Planner/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const addContact = (name, phone, email) => {\r\n   \r\n    setContacts((contacts) => {\r\n    const newContact = {\r\n      name,\r\n      phone,\r\n      email\r\n    }\r\n      return [...contacts, newContact]\r\n   })\r\n  }\r\n\r\n  const addAppointment = (name, contact, date, time) => {\r\n    setAppointments((prevAppointment) => {\r\n      const newAppointment = {\r\n        name,\r\n        contact,\r\n        date,\r\n        time\r\n      }\r\n        return [...prevAppointment, newAppointment]\r\n    })\r\n  }\r\n  \r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage onAddContact={addContact} onContacts={contacts}/> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage onContacts={contacts} onAddAppointment={addAppointment} onAppointment={appointments}/> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}